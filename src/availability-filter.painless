if (doc['unitAvailability.dateRange.startDate'].size() == 0 || doc['unitAvailability.configuration.availability.keyword'].size() == 0) {
    return false;
}

// Get the difference in days between the arrival and departure
LocalDate cArrival = LocalDate.parse(params.arrivalDate);
LocalDate cDeparture = LocalDate.parse(params.departureDate);

int nights = (int) ChronoUnit.DAYS.between(cArrival, cDeparture);

// Get the difference in days between the arrival
// and unitAvailability start date sequence

LocalDate uaStart = doc['unitAvailability.dateRange.startDate'].value.toLocalDate();

int uaDiffDays = (int) ChronoUnit.DAYS.between(uaStart, cArrival);
if (uaDiffDays < 0) {
    return false;
}

String as = doc['unitAvailability.configuration.availability.keyword'].value;

if (uaDiffDays > as.length()) {
    throw new Exception(as.length() + "");
}

int nightsSequence = (uaDiffDays + nights);

String asSpliced = as.substring(uaDiffDays, nightsSequence).toString();

return (asSpliced.indexOf('N') < 0);
